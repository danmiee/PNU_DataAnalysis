sink("severity.txt")
severity <- Severity_Counts
severity
sink()
# 실습: write.table() 함수를 이용한 파일 저장하기
# 단계 1: titanic 자료 확인
titanic
# 단계 2: 파일 저장 위치 지정
setwd("C:/Rwork/Part-I")
# 단계 3: titanic.txt 파일에 저장
write.table(titanic, "titanic.txt", row.names = FALSE)
# 실습: write.table() 함수로 저장한 파일 불러오기
titanic_df <- read.table(file = "titanic.txt", sep = "", header = T)
titanic_df
# 실습: write.csv() 함수를 이용한 파일 저장하기
setwd("C:/Rwork/Part-I")
st.df <- studentx
write.csv(st.df, "stdf.csv", row.names = F, quote = F)
# 실습: writexl 패키지 설치와 로드
install.packages("writexl")
library(writexl)
# 실습: 엑셀로 저장하기
setwd("C:/Rwork/output")
st.df
write_xlsx(x = st.df, path = "st_excel.xlsx", col_names = TRUE)
height <- scan()
# 키와 몸무게 scala입력
height <- scan()
height
weight <- scan()
# 키와 몸무게 scala입력
height <- scan()
weight <- scan()
# BMI 계산
BMI = weight / (height /100)**2
# 키와 몸무게 vector입력
c(height, weight)
# stringr 패키지 설치
install.packages(stringr)
#문자열 입력
str <- scan("")
#문자열 입력
str <- scan("")
# 키와 몸무게 scala입력
height <- scan()
weight <- scan()
# 키와 몸무게 vector입력
c(height, weight)
#문자열 입력
str <- scan("")
# BMI 계산
BMI = weight / (height /100)**2
# 키와 몸무게 vector입력
c(height, weight) <- scan()
170 50
# 키와 몸무게 vector입력
c(height, weight) <- scan()
height, weight <- scan()
160
50
160
height weight <- scan()
height, weight <- scan(height, weight)
data <- scan()
data <- scan()
data <- scan()
weight <- data[2]
data <- scan()
height <- data[1]
weight <- data[2]
BMI <- weight / (height /100)**2
data
# 몸무게 수치 변환
data <- readline()
mode(data)
# 문자열 분리
data_split(' ')
# 문자열 분리
str_split(data, " ")
# 자료형 확인
mode(data)
# 문자열 분리
char <- str_split(data, " ")
mode(char)
mode(char[1])
mode(char[2])
# 문자열 분리
data_list <- str_split(data, " ")
# 키와 몸무게 vector입력(문자열로)
data <- readline()
180
80
data <- scan()
height <- data[1]
weight <- data[2]
# BMI 계산
BMI <- weight / (height /100)**2
# 키와 몸무게 vector입력(문자열로)
data <- readline()
# 문자열 분리
data_list <- str_split(data, " ")
# 자료형 확인
mode(data_list)
# 문자열 분리
data <- str_split(data, " ")
# 자료형 확인
mode(data)
# 벡터로 형변환
data <- unlist(data)
# 벡터 확인
mode(data)
class(data)
is.vector(data)
# 숫자벡터로 변경
num(data)
# 숫자벡터로 변경
data <- as.numeric(data)
data
mode(df)
class(df)
df
# 데이터프레임 입력
df <- data.frame()
mode(df)
class(df)
df
mode(df)
class(df)
df <- edit(df)
df
# 데이터프레임 열명 변경
names(df)
# 데이터프레임 열명 변경
names(df) <- c("height","weight")
df
df$BMI <- df$weight / (df$height / 100)**2
df
# 해결문제
# 국민건강보험공단 자료를 이용하여 BMI와 비만도를 구하시오.
getwd()
setwd(C:\Rwork\training\01)
setwd(C:\Rwork\output)
# 해결문제
# 국민건강보험공단 자료를 이용하여 BMI와 비만도를 구하시오.
getwd()
# 해결문제
# 국민건강보험공단 자료를 이용하여 BMI와 비만도를 구하시오.
dfbmi <- read.csv("./01_국민건강보험공단500.csv", header = T, stringsAsFactors = F, fileEncoding = 'euc-kr')
dfbmi
# 해결문제
# 국민건강보험공단 자료를 이용하여 BMI와 비만도를 구하시오.
dfbmi <- read.csv("./01_국민건강보험공단500.csv", header = T, stringsAsFactors = F, fileEncoding = 'euc-kr')
dfbmi
dfbmi
# 해결문제
# 국민건강보험공단 자료를 이용하여 BMI와 비만도를 구하시오.
dfbmi <- read.csv("./01_국민건강보험공단500.csv", fileEncoding = 'euc-kr')
dfbmi
# 해결문제
getwd()
setwd("C:/Rwork/training/01")
# 해결문제
getwd()
# 국민건강보험공단 자료를 이용하여 BMI와 비만도를 구하시오.
dfbmi <- read.csv("./01_국민건강보험공단500.csv", header = T, stringsAsFactors = F, fileEncoding = 'euc-kr')
dfbmi
# 비만도
df$BMI <- df$체중 / (df$신장장 / 100) ** 2
# 비만도
df$'BMI' <- df$'체중' / (df$'신장' / 100) ** 2
df
# 비만도
dfbmi$'비만도' <- dfbmi$'체중' / (dfbmi$'신장' / 100) ** 2
dfbmi
names(dfbmi) <- c("성별","연령","신장","체중","BMI")
dfbmi
dfbmi$'비만도' <- if(dfbmi$'비만도'<20) {
cat("저체중")
} else if(dfbmi$'비만도'<25) {
cat("정상")
} else if(dfbmi$'비만도'<30) {
cat("과체중")
} else {
cat("비만")
}
dfbmi
dfbmi$'비만도' <- if(dfbmi$'BMI'<20) {
cat("저체중")
} else if(dfbmi$'BMI'<25) {
cat("정상")
} else if(dfbmi$'BMI'<30) {
cat("과체중")
} else {
cat("비만")
}
# 저체중	20 미만
# 정상	20 - 24
# 과체중	25 - 29
# 비만	30 이상
dfbmi$'비만도' <- if(dfbmi$'BMI'<20) {cat("저체중")} else if(dfbmi$'BMI'<25) {cat("정상")} else if(dfbmi$'BMI'<30) {cat("과체중")} else {cat("비만")}
dfbmi
# 저체중	20 미만
# 정상	20 - 24
# 과체중	25 - 29
# 비만	30 이상
dfbmi$'비만도' <- if(dfbmi$'BMI'<20) {cat("저체중")
} else if(dfbmi$'BMI'<25) {cat("정상")
} else if(dfbmi$'BMI'<30) {cat("과체중")
} else {cat("비만")}
dfbmi
# 저체중	20 미만
# 정상	20 - 24
# 과체중	25 - 29
# 비만	30 이상
dfbmi$'비만도'
> if(dfbmi$'BMI'<20) {cat("저체중")
> if(dfbmi$'BMI'<20) {cat("저체중")
# 저체중	20 미만
# 정상	20 - 24
# 과체중	25 - 29
# 비만	30 이상
dfbmi$'비만도'
# 국민건강보험공단 자료를 이용하여 BMI와 비만도를 구하시오.
dfbmi <- read.csv("./01_국민건강보험공단500.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
dfbmi
head(dfbmi)
# 비만도
dfbmi$BMI <- dfbmi$체중 / (dfbmi$신장 / 100) ** 2
head(dfbmi)
# 비만도
# 저체중	20 미만
# 정상	20 - 24
# 과체중	25 - 29
# 비만	30 이상
dfbmi$비만도 <- ifelse(dfbmi$BMI<20, "저체중",
ifelse(dfbmi$BMI<25, "정상",
ifelse(dfbmi$BMI<30, "과체중", "비만")))
head(dfbmi)
# 빈도 테이블
tab <- table(dfbmi$비만도, dfbmi$성별)
tab
# 빈도 테이블
tab <- table(dfbmi$성별, dfbmi$비만도도)
# 빈도 테이블
tab <- table(dfbmi$성별, dfbmi$비만도)
tab
# 빈도 테이블
tab <- table(dfbmi$비만도, dfbmi$성별)
tab
# 빈도 테이블 저장
write.csv(tab, "BMItable.csv", row.names = F, quote = F)
# 빈도 테이블 저장
write.csv(tab, "BMItable.csv", row.names = T, quote = T, fileEncoding = 'euc-kr')
# 빈도 테이블 저장
write.csv(dfbmi, "dfbmi.csv", row.names = T, quote = T, fileEncoding = 'euc-kr')
# 빈도 테이블 저장
write.csv(dfbmi, "./data/dfbmi.csv", fileEncoding = 'euc-kr')
# 빈도 테이블 저장
write.csv(dfbmi, "./data/dfbmi.csv", fileEncoding = 'euc-kr', quote = F)
write.csv(tab, "./data/빈도표.csv", fileEncoding = 'euc-kr')
# 빈도 테이블 저장
write.csv(dfbmi, "./data/dfbmi.csv", fileEncoding = 'euc-kr', quote = F)
write.csv(tab, "./data/빈도표.csv", fileEncoding = 'euc-kr', quote = F)
# 빈도 테이블 저장
write.csv(dfbmi, "./data/건강검진비만도도.csv", fileEncoding = 'euc-kr', quote = F)
# 빈도 테이블 저장
write.csv(dfbmi, "./data/건강검진비만도.csv", fileEncoding = 'euc-kr', quote = F)
head(dfbmi)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(dfhealth)
head(dfhealth)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./대사증후군_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(dfhealth)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./대사증후군_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(dfhealth)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(dfhealth)
# 높은 혈압(130/85mmHg 이상)
# 높은 혈당(공복 혈당 100mg/dL 이상)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
ifelse(dfhealth$수축기.혈압>=130, dfhealth$고혈압 <- 1, dfhealth$고혈압 <- 0)
ifelse(dfhealth$식전혈당.공복혈당.>=100, dfhealth$고혈당 <- 1, dfhealth$고혈당 <- 0)
ifelse(dfhealth$트리글리세라이드>=150, dfhealth$고중성지방 <- 1, dfhealth$고중성지방 <- 0)
if(dfhealth$성별코드==1) {
ifelse(dfhealth$HDL.콜레스테롤<40, dfhealth$저HDL <- 1, dfhealth$저HDL <- 0)
ifelse(dfhealth$허리둘레>=90, dfhealth$복부비만 <- 1, dfhealth$복부비만 <- 0)
} else {
ifelse(dfhealth$HDL.콜레스테롤<50, dfhealth$저HDL <- 1, dfhealth$저HDL <- 0)
ifelse(dfhealth$허리둘레>=85, dfhealth$복부비만 <- 1, dfhealth$복부비만 <- 0)
}
if(dfhealth$성별코드=1) {
dfhealth
head(dfhealth)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./대사증후군_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./대사증후군정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(dfhealth)
# 높은 혈압(130/85mmHg 이상)
# 높은 혈당(공복 혈당 100mg/dL 이상)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
is.na(dfhealth)
na.omit()
na.omit(dfhealth)
# 높은 혈압(130/85mmHg 이상)
# 높은 혈당(공복 혈당 100mg/dL 이상)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
is.na(dfhealth)
na.omit(dfhealth)
# 높은 혈압(130/85mmHg 이상)
# 높은 혈당(공복 혈당 100mg/dL 이상)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
is.na(dfhealth)
dfhealth <- na.omit(dfhealth)
# 높은 혈압(130/85mmHg 이상)
# 높은 혈당(공복 혈당 100mg/dL 이상)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
is.na(dfhealth)
ifelse(dfhealth$수축기.혈압>=130, dfhealth$고혈압 <- 1, dfhealth$고혈압 <- 0)
ifelse(dfhealth$식전혈당.공복혈당.>=100, dfhealth$고혈당 <- 1, dfhealth$고혈당 <- 0)
ifelse(dfhealth$트리글리세라이드>=150, dfhealth$고중성지방 <- 1, dfhealth$고중성지방 <- 0)
if(dfhealth$성별코드=1) {
head(dfhealth)
# Solution
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
# Solution
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfcheck <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
# Solution
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfcheck <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(dfhealth)
# column명 확인
names(dfcheck)
# 필요한 열 추출
df2 <- dfcheck[c("성별코드","허리둘레","수축기.혈압","이완기.혈압","식전혈당.공복혈당","트리글리세라이드","HDL.콜레스테롤")]
head(df2)
# Solution
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfcheck <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
# column명 확인
names(dfcheck)
# 필요한 열 추출
df2 <- dfcheck[c("성별코드","허리둘레","수축기.혈압","이완기.혈압","식전혈당.공복혈당.","트리글리세라이드","HDL.콜레스테롤")]
head(df2)
# NA 값 제거
df2 <- na.omit(df2)
# column명 변경
names(df2) <- c("성별코드","허리둘레","수축기혈압","이완기혈압","공복혈당","트리글리세라이드","HDL콜레스테롤")
head(df2)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfhealth <- read.csv("./대사증후군정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(dfhealth)
dfhealth <- na.omit(dfhealth)
View(dfhealth)
ifelse(df2$수축기.혈압>=130, df2$고혈압 <- 1, df2$고혈압 <- 0)
ifelse(df2$식전혈당.공복혈당.>=100, df2$고혈당 <- 1, df2$고혈당 <- 0)
ifelse(df2$트리글리세라이드>=150, df2$고중성지방 <- 1, df2$고중성지방 <- 0)
if(df2$성별코드==1) {
ifelse(df2$HDL.콜레스테롤<40, df2$저HDL <- 1, df2$저HDL <- 0)
ifelse(df2$허리둘레>=90, df2$복부비만 <- 1, df2$복부비만 <- 0)
} else {
ifelse(df2$HDL.콜레스테롤<50, df2$저HDL <- 1, df2$저HDL <- 0)
ifelse(df2$허리둘레>=85, df2$복부비만 <- 1, df2$복부비만 <- 0)
}
# Solution
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfcheck <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
# 필요한 열 추출
df2 <- dfcheck[c("성별코드","허리둘레","수축기.혈압","이완기.혈압","식전혈당.공복혈당.","트리글리세라이드","HDL.콜레스테롤")]
# NA 값 제거
df2 <- na.omit(df2)
# column명 변경
names(df2) <- c("성별코드","허리둘레","수축기혈압","이완기혈압","공복혈당","트리글리세라이드","HDL콜레스테롤")
head(df2)
head(df2)
df2$높은혈압 <- ((df2$수축기혈압>=130) | (df2$이완기혈압 >= 85))
head(df2)
# 높은 혈당(공복 혈당 100mg/dL 이상)
df2$높은혈당 <- df2$공복혈당 >= 100
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
df2$높은중성지방 <- df2$트리글리세라이드 >= 150
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
df2$낮은콜레스테롤 <- ((df2$성별코드 == 1) & (df2$HDL콜레스테롤 < 40) | (df2$성별코드 == 2) & (df2$HDL콜레스테롤 <50))
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
df2$복부비만 <- (((df2$성별코드 == 1) & (df2$허리둘레 < 90)) | ((df2$성별코드 == 2) & (df2$허리둘레 <85)))
# 대사증후군 수
df2$대사증후군 <- (df2$높은혈압 + df2$높은혈당 + df2$높은중성지방 + df2$낮은콜레스테롤 + df2$복부비만)
head(df2)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
table(df2$성별코드,df2$대사증후군)
names("성별코드","허리둘레","수축기혈압","이완기혈압","공복혈당","트리글리세라이드","HDL콜레스테롤","높은혈압","높은혈당","높은중성지방","낮은콜레스테롤","복부비만","대사증후군수")
view(df2)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
ifelse(df2$대사증후군 == 0, cat("정상"),
ifelse(df2$대사증후군 <= 2, cat("주의군"), cat("위험군")))
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
df2$판별 <- ifelse(df2$대사증후군 == 0, cat("정상"), ifelse(df2$대사증후군 <= 2, cat("주의군"), cat("위험군")))
View(df2)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
df2$판별 <- ifelse(df2$대사증후군 == 0, "정상", ifelse(df2$대사증후군 <= 2, "주의군", "위험군"))
head(df2)
df2$성별 <- ifelse(df2$성별코드 == 1, "남", "여")
table(df2$성별, df2$판별)
table(df2$판별, df2$성성별)
table(df2$판별, df2$성별)
# Solution
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
dfcheck <- read.csv("./국민건강보험공단_건강검진정보_20211229.CSV",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
# 필요한 열 추출
df2 <- dfcheck[c("성별코드","허리둘레","수축기.혈압","이완기.혈압","식전혈당.공복혈당.","트리글리세라이드","HDL.콜레스테롤")]
# NA 값 제거
df2 <- na.omit(df2)
# column명 변경
names(df2) <- c("성별코드","허리둘레","수축기혈압","이완기혈압","공복혈당","트리글리세라이드","HDL콜레스테롤")
# 높은 혈압(130/85mmHg 이상)
df2$높은혈압 <- ((df2$수축기혈압 >= 130) | (df2$이완기혈압 >= 85))
# 높은 혈당(공복 혈당 100mg/dL 이상)
df2$높은혈당 <- df2$공복혈당 >= 100
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
df2$높은중성지방 <- df2$트리글리세라이드 >= 150
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
df2$낮은콜레스테롤 <- (((df2$성별코드 == 1) & (df2$HDL콜레스테롤 < 40)) | ((df2$성별코드 == 2) & (df2$HDL콜레스테롤 <50)))
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
df2$복부비만 <- (((df2$성별코드 == 1) & (df2$허리둘레 >= 90)) | ((df2$성별코드 == 2) & (df2$허리둘레 >= 85)))
# 대사증후군 수
df2$대사증후군 <- (df2$높은혈압 + df2$높은혈당 + df2$높은중성지방 + df2$낮은콜레스테롤 + df2$복부비만)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
df2$판별 <- ifelse(df2$대사증후군 == 0, "정상", ifelse(df2$대사증후군 <= 2, "주의군", "위험군"))
df2$성별 <- ifelse(df2$성별코드 == 1, "남", "여")
write.csv(table(df2$판별, df2$성별)
table(df2$판별, df2$성별)
table(df2$판별, df2$성별)
