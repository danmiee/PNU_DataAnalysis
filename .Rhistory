install.packages("hash")
install.packages("tau")
install.packages("devtools")
install.packages("RSQLite")
library(KoNLP)
library(tm)
library(wordcloud)
# 실습: 형태소 분석을 위한 KoNLP 패키지 설치
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.4/KoNLP_0.80.1.zip",
repos = NULL)
# 실습: 한글 사전과 텍스트 마이닝 관련 패키지 설치
install.packages("Sejong")
install.packages("wordcloud")
install.packages("tm")
# 실습: 패키지 로딩
library(KoNLP)
# 실습: 변수 리코딩과 데이터프레임 생성하기
# 단계 1: 실습 파일 가져오기
setwd("C:/Rwork/Part-III")
data <- read.csv("cleanDescriptive.csv", header = TRUE)
head(data)
# 단계 2: 변수 리코딩
x <- data$level2
y <- data$pass2
# 단계 3: 데이터프레임 생성
result <- data.frame(Level = x, Pass = y)
dim(result)
# 실습: 교차 분할표 작성
# 단계 1: 기본함수를 이용한 교차 분할표 작성
table(result)
# 단계 2: 교차 분할표 작성을 위한 패키지 설치
install.packages("gmodels")
library(gmodels)
# 단계 2: 교차 분할표 작성을 위한 패키지 설치
install.packages("gmodels", dependencies=TRUE, INSTALL_opts = '--no-lock')
library(gmodels)
library(gmodels)
#암종류별 성별 분석
library(dplyr)
#암종류별 성별 분석
install.packages("dplyr")
library(dplyr)
#암종류별 성별 분석
install.packages("dplyr", dependencies=TRUE, INSTALL_opts = '--no-lock')
library(dplyr)
library(dplyr)
library(dplyr)
#암종류별 성별 분석
install.packages("dplyr")
library(dplyr)
#암종류별 성별 분석
install.packages("dplyr")
library(dplyr)
library(dplyr)
#데이터 불러오기(암발생자수)
getwd()
df_cc <- read.csv("../03/03_암발생자수.csv",
header=T,
stringsAsFactors = F,
fileEncoding = "euc-kr")
setwd("C:/Rwork/training")
df_cc <- read.csv("./03/03_암발생자수.csv",
header=T,
stringsAsFactors = F,
fileEncoding = "euc-kr")
head(df_cc)
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df_cc) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
head(df_cc)
# 데이터셋 조회
# 1) 특정 변수 조회
unique(df_cc$암종별)
# 1) 특정 변수 조회
df_cc_all <- filter(df_cc, df_cc$암종별=="모든 암(C00-C96)")
head(df_cc_all)
unique(df_cc$발생자수)
df_cc_sum <- filter(df_cc, df_cc$성별=="계")
head(df_cc_sum)
df_cc_sum
# 2) 특정 열명을 사용하여 조회
df_cc[암종별]
# 2) 특정 열명을 사용하여 조회
df_cc['암종별']
# 1) 특정 변수 조회
df_cc$암종별
rm(df_cc_all)
rm(df_cc_sum)
class(t1)
# 1) 특정 변수 조회
t1 <- df_cc$암종별
# 2) 특정 열명을 사용하여 조회
t2 <- df_cc['암종별']
mode(t1)
class(t1)
)
class(t
mode(t2)
class(t2)
mode(t2)
class(t2)
is.vector(t1)
is.vector(t2)
# 3) 특정 행 조회 :1행 조회
df_cc[1]
# 3) 특정 행 조회 :1행 조회
df_cc[2]
# 3) 특정 행 조회 :1행 조회
df_cc[1,]
df_cc[2,]
df_cc[c(2,4),]
# 4) 특정행 제거 : 1행제거
rm(df_cc[1,])
# 4) 특정행 제거 : 1행제거
df_cc[-1,]
# 4) 특정행 제거 : 1행제거
df_cm <- df_cc[-1,]
head(df_cm)
# 5) 특정행 열 조회
df_cm[1,3]
# 5) 특정행 열 조회
df_cm[,1]
# 5) 특정행 열 조회
df_cm$암종별
# 5) 특정행 열 조회
unique(df_cm$암종별)
# %%(파이프연산자) : sql의 select와 유사
df_cm2 <- df_cm%%
filter(암종별!="모든 암(C00-C96)")  # sql의 where와 유사
unique(df_cm2$암종별)
# %%(파이프연산자) : sql의 select와 유사
df_cm2 <- df_cm%%
filter('암종별' != "모든 암(C00-C96)")  # sql의 where와 유사
head(df_cm)
# %%(파이프연산자) : sql의 select와 유사
df_cm2 <- df_cm%%
filter('암종별' != "모든 암(C00-C96)")  # sql의 where와 유사
# %%(파이프연산자) : sql의 select와 유사
df_cm2 <- df_cm %% filter('암종별' != "모든 암(C00-C96)")  # sql의 where와 유사
# %%(파이프연산자) : sql의 select와 유사
df_cm2 <- df_cm %%
# sql의 where와 유사
filter(df_cm$암종별 != "모든 암(C00-C96)") %%
filter(df_cm$연령별 == "계")
# %%(파이프연산자) : sql의 select와 유사
# sql의 where와 유사
df_cm2 <- df_cm %%
filter(df_cm$암종별 != "모든 암(C00-C96)") %%
filter(df_cm$연령별 == "계")
# %%(파이프연산자) : sql의 select와 유사
# sql의 where와 유사
df_cm2 <- df_cm %%
filter(암종별 != "모든 암(C00-C96)") %%
filter(연령별 == "계")
View(df_cm)
rm(df_cc)
rm(df_cm)
rm(t1)
rm(t2)
library(dplyr)
#데이터 불러오기(암발생자수)
getwd()
df1 <- read.csv("./03/03_암발생자수.csv",
header=T,
stringsAsFactors = F,
fileEncoding = "euc-kr")
head(df1)
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df1) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
# 데이터셋 조회
unique(df1$암종별)
# 1) 특정 변수 조회
t1 <- df1$암종별
mode(t1)      # character
class(t1)     # character
is.vector(t1) # TRUE
# 2) 특정 열명을 사용하여 조회
t2 <- df1['암종별']
mode(t2)      # list
class(t2)     # data.frame : vector 형태로 변경 필요
is.vector(t2) # FALSE
# 3) 특정 행 조회 :1행 조회
df1[1,]
df1[c(2,4),]
# 4) 특정행 제거 : 1행제거
df <- df1[-1,]
head(df)
# 5) 특정행 열 조회
unique(df$암종별)
# %%(파이프연산자) : sql의 select와 유사
# sql의 where와 유사
df2 <- df %%
filter(암종별 != "모든 암(C00-C96)") %%
filter(연령별 == "계")
# %%(파이프연산자) : sql의 select와 유사
# sql의 where와 유사
df2 <- df %%
filter(암종별!="모든 암(C00-C96)") %%
filter(연령별=="계")
# %>%(파이프연산자) : sql의 select와 유사
# sql의 where와 유사
df2 <- df %>%
filter(암종별!="모든 암(C00-C96)") %>%
filter(연령별=="계")
unique(df2$암종별)
df21 <- df %>%
filter(암종별!="모든 암(C00-C96)") %>%
filter(연령별=="남자")
df22 <- df %>%
filter(암종별!="모든 암(C00-C96)") %>%
filter(연령별=="여자")
unique(df2$암종별)
# 열 데이터타입 확인
type(df2$발생자수)
df21 <- df2 %>%
filter(성별=="계")
df22 <- df2 %>%
filter(성별!="계")
df21
df22
# 특정 열 가져오기
df21 <- df21[, c('암종별', '발생자수')]
df21
df22 <- df22[, c(암종별, 성별, 발생자수)]
df22 <- df22[, c('암종별', '성별', '발생자수')]
df22
# 그래프
library(ggplot2)
# 그래프
library(ggplot2)
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=성별, y=발생자수, fill=암종종별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=성별, y=발생자수, fill=암종별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
# 5) 특정행 열 조회
df[1,1]
# 5) 특정행 열 조회
df[1,2]
# 5) 특정행 열 조회
df[1,3]
# 5) 특정행 열 조회
df[1,4]
# 5) 특정행 열 조회
df[1,5]
# 5) 특정행 열 조회
df[1,'암종별별']
# 5) 특정행 열 조회
df[1,'암종별']
# 5) 특정행 열 조회
df[1,1]
df[1:3,'암종별']
df[1:3,c('암종별','발생자수수')]
df[1:3,c('암종별','발생자수')]
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df21) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity")  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df2) +
geom_bar(stat="identity")  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
2
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity")  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
# 열 데이터타입 확인
str(df)
# %>%(파이프연산자) : sql의 select와 유사
# filter : sql의 where와 유사
df2 <- df %>%
filter(암종별!="모든 암(C00-C96)") %>%
filter(연령별=="계")
df2
View(df)
# 값 변경 : - => 0
df$발생자수.replace('-',0)
# 값 변경 : - => 0
'df$발생자수'.replace('-',0)
# 값 변경 : - => 0
replace('-',df$발생자수,0)
replace('-',df$조발생률,0)
# 열 데이터타입 변경
type(df$발생자수)
# 열 데이터타입 변경
type(df$발생자수)
# 열 데이터타입 변경
type.convert(df$발생자수)
# 열 데이터타입 변경
type.convert(, integer())
# 열 데이터타입 변경
type.convert(integer(df$발생자수))
# 값 변경 : - => 0
df$발생자수
# 값 변경 : - => 0
df$발생자수 <- ifelse(df$발생자수=='-','0',df$발생자수)
df$발생자수
df$조발생률 <- ifelse(df$조발생률=='-','0',df$조발생률)
df$조발생률
# 열 데이터타입 변경
df$발생자수 <- as.numeric(df$발생자수)
df$조발생률 <- as.numeric(df$조발생률)
str(df)
# 특정 열 가져오기
df21 <- df21[, c('암종별', '발생자수')]
df22 <- df22[, c('암종별', '성별', '발생자수')]
df21
df22
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity")  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
# %>%(파이프연산자) : sql의 select와 유사
# filter : sql의 where와 유사
df2 <- df %>%
filter(암종별!="모든 암(C00-C96)") %>%
filter(연령별=="계")
df21 <- df2 %>%
filter(성별=="계")
df22 <- df2 %>%
filter(성별!="계")
df21
df22
# %>%(파이프연산자) : sql의 select와 유사
# filter : sql의 where와 유사
df2 <- df %>%
filter(암종별!="모든 암(C00-C96)") %>%
filter(연령별=="계")
df2
df21 <- df2 %>%
filter(성별=="계")
df21
df22 <- df2 %>%
filter(성별!="계")
df22
# 특정 열 가져오기
df21 <- df21[, c('암종별', '발생자수')]
df21
df22 <- df22[, c('암종별', '성별', '발생자수')]
df22
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity")  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold',angle = 90))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
# 그래프
install.packages("ggthemes")
library(ggthemes)
library(ggthemes)
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_clean()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_bw()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_calc()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_solarized_2()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj(axis(x=element_text(angle = 90)))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj(element_text(angle=90))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj(axis.text.x=element_text(angle=90))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(axis.text.x=element_text(angle=90)) +
theme_wsj()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(axis.text.x=element_text(angle=90))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(axis.text.x=element_text(angle=45))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme(axis.text.x=element_text(angle=90))
theme_wsj(axis.text.x=element_text(angle=90)
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj(axis.text.x=element_text(angle=90))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj(axis.text.x=element_text(angle=90))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj()
unique(df2$암종별)
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
scale_x_discrete(expand = c(0,0), labels = c("구강","식도","위","대장","간","담낭","췌장","후두","폐","유방","자궁경부","자궁체부","난소","전립선","고환","신장","방광","뇌","갑상선","호지킨","비호지킨","다발성골수종","백혈병","기타"))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
scale_x_discrete(expand = c(0,0),
labels = c("구강","식도","위","대장","간","담낭","췌장","후두","폐","유방","자궁경부","자궁체부","난소","전립선","고환","신장","방광","뇌","갑상선","호지킨","비호지킨","다발성골수종","백혈병","기타")) +
coord__flip()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
scale_x_discrete(expand = c(0,0), labels = c("구강","식도","위","대장","간","담낭","췌장","후두","폐","유방","자궁경부","자궁체부","난소","전립선","고환","신장","방광","뇌","갑상선","호지킨","비호지킨","다발성골수종","백혈병","기타")) +
coord__flip()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
scale_x_discrete(expand = c(0,0), labels = c("구강","식도","위","대장","간","담낭","췌장","후두","폐","유방","자궁경부","자궁체부","난소","전립선","고환","신장","방광","뇌","갑상선","호지킨","비호지킨","다발성골수종","백혈병","기타")) +
coord_flip()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
coord_flip()
ggplot(mapping =aes(x=('암종별', total_contributed), y=('발생자수', total_contributed), fill='성별'), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
# x축, y축 change
coord_flip()
암종별
ggplot(mapping =aes(x=(암종별, total_contributed), y=(발생자수, total_contributed), fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
# x축, y축 change
coord_flip()
ggplot(mapping =aes(x=reorder(암종별), y=발생자수, fill=reorder(성별)), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
# x축, y축 change
coord_flip()
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df22) +
geom_bar(stat="identity", position=position_dodge())  +
ggtitle("암종별 성별 발생자수 분석")+
theme_wsj() +
# x축, y축 change
coord_flip()
plot(df21$발생자수, type="o", col="red", xlab='', ylab='')
plot(df22$발생자수, type="o", col="red", xlab='', ylab='')
